<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How To...</title><link>https://howto.pandey.me/</link><description>Recent content on How To...</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Apr 2024 08:54:57 -0700</lastBuildDate><atom:link href="https://howto.pandey.me/index.xml" rel="self" type="application/rss+xml"/><item><title>Loop over contents of a file in Bash</title><link>https://howto.pandey.me/posts/loop-over-contents-of-a-file-in-bash/</link><pubDate>Mon, 22 Apr 2024 08:54:57 -0700</pubDate><guid>https://howto.pandey.me/posts/loop-over-contents-of-a-file-in-bash/</guid><description>&lt;p>To iterate over every line in a file, we need to use a while loop, instead of &lt;a href="https://howto.pandey.me/posts/write-a-for-loop-in-bash/">for loop&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="nv">IFS&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="nb">read&lt;/span> -r line&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$line&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span> &amp;lt; /path/to/file
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/a/30735977">source&lt;/a>&lt;/p></description></item><item><title>Calculate the duration between two timestamps in PostgreSQL</title><link>https://howto.pandey.me/posts/calculate-the-duration-between-two-timestamps-in-postgresql/</link><pubDate>Wed, 17 Jan 2024 10:12:38 -0800</pubDate><guid>https://howto.pandey.me/posts/calculate-the-duration-between-two-timestamps-in-postgresql/</guid><description>&lt;p>Say you have a table with two &lt;code>timestamp&lt;/code> columns and want to calculate the duration between them. Subtracting one &lt;code>timestamp&lt;/code> from another returns an &lt;code>interval&lt;/code>. You can then convert this interval to a number of seconds using &lt;code>EXTRACT(EPOCH FROM ...)&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">created_at&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">updated_at&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">EXTRACT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EPOCH&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">updated_at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">created_at&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">duration&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">my_table&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://www.postgresql.org/docs/current/functions-datetime.html#FUNCTIONS-DATETIME-EXTRACT">source&lt;/a>&lt;/p></description></item><item><title>Print an Emoji in Go</title><link>https://howto.pandey.me/posts/print-an-emoji-in-go/</link><pubDate>Sun, 24 Sep 2023 19:55:44 -0700</pubDate><guid>https://howto.pandey.me/posts/print-an-emoji-in-go/</guid><description>&lt;p>When writing debug messages to logs or console, I find it useful to use emojis to bring attention to certain lines. In Go, you can do this in two ways -&lt;/p>
&lt;p>Add emojis directly in the code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ðŸš¨ ðŸš¨ ðŸš¨ ATTENION! ðŸš¨ ðŸš¨ ðŸš¨&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or use the Unicode code point:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\U0001F6A8 \U0001F6A8 \U0001F6A8 ATTENION! \U0001F6A8 \U0001F6A8 \U0001F6A8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In both cases, the output will look like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>ðŸš¨ ðŸš¨ ðŸš¨ ATTENION! ðŸš¨ ðŸš¨ ðŸš¨
&lt;/code>&lt;/pre></description></item><item><title>Write a for loop in Bash</title><link>https://howto.pandey.me/posts/write-a-for-loop-in-bash/</link><pubDate>Tue, 05 Sep 2023 11:02:44 -0700</pubDate><guid>https://howto.pandey.me/posts/write-a-for-loop-in-bash/</guid><description>&lt;p>Occasionally I need to run the same shell command or set of commands in a loop. The one-liner syntax for doing this in bash or zsh is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> i in &lt;span class="o">{&lt;/span>1..10&lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Multiple commands can be run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> i in &lt;span class="o">{&lt;/span>1..10&lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$i&lt;/span>&lt;span class="s2">*2&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="k">$((&lt;/span>i*2&lt;span class="k">))&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;----&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And a step value can also be given:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> i in &lt;span class="o">{&lt;/span>1..10..2&lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="nv">$i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Use psql with Azure Active Directory authentication</title><link>https://howto.pandey.me/posts/use-psql-with-azure-active-directory-authentication/</link><pubDate>Mon, 17 Apr 2023 22:51:26 -0700</pubDate><guid>https://howto.pandey.me/posts/use-psql-with-azure-active-directory-authentication/</guid><description>&lt;p>I needed to connect to an &lt;a href="https://azure.microsoft.com/en-us/products/postgresql/">Azure Database for PostgreSQL&lt;/a> which uses &lt;a href="https://azure.microsoft.com/en-us/products/active-directory">Azure Active Directory&lt;/a> for authentication. Despite the many GUI clients available, I prefer using &lt;a href="https://www.postgresql.org/docs/current/app-psql.html">psql&lt;/a>. Fortunately, it&amp;rsquo;s fairly easy to connect using psql.&lt;/p>
&lt;p>The following steps are taken from &lt;a href="https://learn.microsoft.com/en-us/azure/postgresql/single-server/how-to-configure-sign-in-azure-ad-authentication">here&lt;/a>.&lt;/p>
&lt;h3 id="step-1---install-azure-cli">Step 1 - Install Azure CLI&lt;/h3>
&lt;p>On macOS, the simplest method is to use Homebrew:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">brew update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> brew install azure-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Detailed instructions can be found &lt;a href="https://learn.microsoft.com/en-us/cli/azure/install-azure-cli-macos">here&lt;/a>.&lt;/p>
&lt;h3 id="step-2---login-to-azure">Step 2 - Login to Azure&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will open a browser window where you can login to Azure.&lt;/p>
&lt;h3 id="step-3---retrieve-and-set-azure-ad-access-token-as-the-password">Step 3 - Retrieve and set Azure AD access token as the password&lt;/h3>
&lt;p>Next, we need to get an access token from Azure AD and set that in the &lt;code>PGPASSWORD&lt;/code> environment variable so psql can access it. This is easy to do if you have &lt;a href="https://stedolan.github.io/jq/">jq&lt;/a> installed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">PGPASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>az account get-access-token --resource-type oss-rdbms &lt;span class="p">|&lt;/span> jq -r &lt;span class="s1">&amp;#39;.accessToken&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step-4---connect-using-psql">Step 4 - Connect using psql&lt;/h3>
&lt;p>That was it! You are ready to connect to the server using psql:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">psql &lt;span class="s2">&amp;#34;host=... user=... dbname=... sslmode=require&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also combine the previous two commands, which can be useful if you want to create an alias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">PGPASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>az account get-access-token --resource-type oss-rdbms &lt;span class="p">|&lt;/span> jq -r &lt;span class="s1">&amp;#39;.accessToken&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> psql &lt;span class="s2">&amp;#34;host=... user=... dbname=... sslmode=require&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Run Hugo server locally</title><link>https://howto.pandey.me/posts/run-hugo-server-locally/</link><pubDate>Fri, 14 Apr 2023 13:36:11 -0700</pubDate><guid>https://howto.pandey.me/posts/run-hugo-server-locally/</guid><description>&lt;p>This website is built using &lt;a href="https://gohugo.io/">Hugo&lt;/a>. I use &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules">git submodules&lt;/a> to add the theme, so when I want to run the website locally, there is one additional command needed to pull in the files for the theme:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git submodule update --init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After this, simply run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it!&lt;/p>
&lt;p>More details of the &lt;code>hugo server&lt;/code> command can be found &lt;a href="https://gohugo.io/commands/hugo_server/">here&lt;/a>.&lt;/p></description></item><item><title>Using Supervisor on macOS</title><link>https://howto.pandey.me/posts/using-supervisor-on-macos/</link><pubDate>Thu, 13 Apr 2023 10:45:32 -0700</pubDate><guid>https://howto.pandey.me/posts/using-supervisor-on-macos/</guid><description>&lt;p>When I&amp;rsquo;m working on a project, I often need to run a number of processes, e.g. a frontend app, several backend services, maybe a redis server etc. Instead of running them in Docker containers, or in separate terminal windows, I like to use &lt;a href="http://supervisord.org/">Supervisor&lt;/a>. Supervisor is a process control system on UNIX-like OSes, and is easy to use on macOS.&lt;/p>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>The simplest option is to use &lt;a href="https://pypi.org/project/pip/">pip&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">pip3 install supervisor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Other options for installation are available &lt;a href="http://supervisord.org/installing.html">here&lt;/a>.&lt;/p>
&lt;h3 id="creating-a-configuration-file">Creating a Configuration File&lt;/h3>
&lt;p>You can create a sample configuration file using &lt;code>echo_supervisord_conf&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">echo_supervisord_conf &amp;gt; /path/to/supervisord.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Customize the file as appropriate. I leave the default sections as-is, just add my programs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[program:redis-server]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">command&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/redis-server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">autostart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">autorestart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">stdout_logfile&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/logs/redis-server.log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">stderr_logfile&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/path/to/logs/redis-server.err.log&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, I like to create a symbolic link in &lt;code>/etc/&lt;/code> so supervisor can automatically find the file. This is not required, it just saves me from having to type the full path every time.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sudo ln -s /path/to/supervisord.conf /etc/supervisord.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="running-supervisord">Running supervisord&lt;/h3>
&lt;p>Now we are ready to start the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">supervisord
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you didn&amp;rsquo;t create a symlink in one of the default paths where supervisord searches for the config file, you can also specify the config path on the command line:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">supervisord -c /path/to/supervisord.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="running-supervisorctl">Running supervisorctl&lt;/h3>
&lt;p>You interact with supervisord using &lt;code>supervisorctl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ supervisorctl status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis-server STOPPED Not started
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or if the config file is not in a standard location:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ supervisorctl -c /path/to/supervisord.conf status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">redis-server STOPPED Not started
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="managing-the-processes">Managing the processes&lt;/h4>
&lt;p>You can a variety of commands with supervisorctl to manage the processes, including &lt;code>start&lt;/code>, &lt;code>stop&lt;/code>, &lt;code>restart&lt;/code>, &lt;code>status&lt;/code> and &lt;code>reload&lt;/code>. To get a full list of commands, type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">supervisorctl &lt;span class="nb">help&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="creating-an-alias">Creating an alias&lt;/h3>
&lt;p>Finally, I create a helper function to save myself a few keystrokes every time I need to start, stop or restart a process. Something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sup&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">((&lt;/span> &lt;span class="nv">$#&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="o">))&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">cd&lt;/span> /path/to/logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;logs&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nb">cd&lt;/span> /path/to/logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> supervisorctl status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;start&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;all&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> supervisorctl start redis-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> supervisorctl start redis-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *&lt;span class="o">)&lt;/span> supervisorctl start &lt;span class="nv">$2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;stop&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;restart&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;redis&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> supervisorctl &lt;span class="nv">$1&lt;/span> redis-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> *&lt;span class="o">)&lt;/span> supervisorctl &lt;span class="nv">$1&lt;/span> &lt;span class="nv">$2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I can type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">sup status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sup start redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sup stop redis
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sup restart redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it!&lt;/p></description></item><item><title>Install a specific version of NPM</title><link>https://howto.pandey.me/posts/install-a-specific-version-of-npm/</link><pubDate>Wed, 12 Apr 2023 10:58:05 -0700</pubDate><guid>https://howto.pandey.me/posts/install-a-specific-version-of-npm/</guid><description>&lt;p>I use &lt;a href="https://nvm.sh">nvm&lt;/a> to manage &lt;a href="https://nodejs.org/en">Node.js&lt;/a> versions on my computer and I typically install the latest version of &lt;a href="https://docs.npmjs.com/cli">npm&lt;/a> that is compatible with the Node.js version. This is as simple as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ nvm install --lts --latest-npm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Installing latest LTS version.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Now using node v18.15.0 &lt;span class="o">(&lt;/span>npm v9.5.0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Attempting to upgrade to the latest working version of npm...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* npm upgraded to: v9.6.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ node -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v18.15.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">9.6.4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or to install a specific version:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ nvm install 16.20.0 --latest-npm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Downloading and installing node v16.20.0...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Now using node v16.20.0 &lt;span class="o">(&lt;/span>npm v8.19.4&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ node -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v16.20.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8.19.4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But sometimes a project requires a specific version of npm. This can be done using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">npm install -g npm@version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Continuing from our earlier example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ nvm use 16.20.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Now using node v16.20.0 &lt;span class="o">(&lt;/span>npm v8.19.4&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ node -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">v16.20.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8.19.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm install -g npm@8.12.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ npm -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">8.12.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that this doesn&amp;rsquo;t impact other node versions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ nvm use 18.15
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Now using node v18.15.0 &lt;span class="o">(&lt;/span>npm v9.6.4&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ nvm use 16.20
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Now using node v16.20.0 &lt;span class="o">(&lt;/span>npm v8.12.0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Create a React app with TypeScript</title><link>https://howto.pandey.me/posts/create-a-react-app-with-typescript/</link><pubDate>Fri, 12 Aug 2022 14:41:48 -0700</pubDate><guid>https://howto.pandey.me/posts/create-a-react-app-with-typescript/</guid><description>&lt;p>In the past year, I have started using &lt;a href="https://www.typescriptlang.org/">TypeScript&lt;/a> quite a lot. I have also dabbled with &lt;a href="https://reactjs.org/">React&lt;/a>, and I have started to like building web apps with TypeScript.&lt;/p>
&lt;p>Fortunately, it&amp;rsquo;s very easy use TypeScript while creating a new React app:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npx create-react-app my-app --template typescript
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or to create the app in the current directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npx create-react-app --template typescript .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://create-react-app.dev/docs/adding-typescript/">source&lt;/a>&lt;/p></description></item><item><title>Search Git History for a string</title><link>https://howto.pandey.me/posts/search-git-history-for-a-string/</link><pubDate>Fri, 05 Aug 2022 11:30:29 -0700</pubDate><guid>https://howto.pandey.me/posts/search-git-history-for-a-string/</guid><description>&lt;p>Occasionally, when looking at a block of code, I want to find out which commit first introduced a particular word. It could be a function name or a variable name. Or which commit took it out. In &lt;a href="https://www.mercurial-scm.org/">Mercurial&lt;/a>, I used to use &lt;code>hg grep&lt;/code> for this. Fortunately, this is easy to do in &lt;code>git&lt;/code> as well.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git log -S &amp;lt;search string&amp;gt; --source --all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/a/5816177">source&lt;/a>&lt;/p></description></item><item><title>Sleep in Javascript</title><link>https://howto.pandey.me/posts/sleep-in-javascript/</link><pubDate>Wed, 18 May 2022 14:44:56 -0700</pubDate><guid>https://howto.pandey.me/posts/sleep-in-javascript/</guid><description>&lt;p>Recently, I was writing a script in TypeScript where I was calling an API a few hundreds of times. I wanted a brief delay between the API calls, when I found out that there is no built-in &lt;code>sleep&lt;/code> in Javascript.&lt;/p>
&lt;p>Fortunately, it was easy enough to implement:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">export&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">sleep&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ms&lt;/span>: &lt;span class="kt">number&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resolve&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ms&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sample usage:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">item&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">items&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// TODO: do some work
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// wait for 100ms
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="nx">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/a/39914235">source&lt;/a>&lt;/p></description></item><item><title>Add a new post in a Hugo site</title><link>https://howto.pandey.me/posts/add-a-new-post-in-a-hugo-site/</link><pubDate>Wed, 04 May 2022 00:08:56 -0700</pubDate><guid>https://howto.pandey.me/posts/add-a-new-post-in-a-hugo-site/</guid><description>&lt;p>This site was built using &lt;a href="https://gohugo.io/">Hugo&lt;/a>. Adding a new post or page is very easy.&lt;/p>
&lt;h3 id="step-1---install-hugo">Step 1 - Install Hugo&lt;/h3>
&lt;p>On macOS, the simplest option is to use &lt;a href="https://gohugo.io/">Homebrew&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">brew install hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Detailed instructions for other platforms can be found &lt;a href="https://gohugo.io/getting-started/installing/">here&lt;/a>.&lt;/p>
&lt;h3 id="step-2---add-a-new-post">Step 2 - Add a new post&lt;/h3>
&lt;p>This post was created using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new content/posts/add-a-new-post-in-a-hugo-site.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>View all open PRs in a Github Organization</title><link>https://howto.pandey.me/posts/view-all-open-prs-in-a-github-organization/</link><pubDate>Tue, 03 May 2022 09:28:21 -0700</pubDate><guid>https://howto.pandey.me/posts/view-all-open-prs-in-a-github-organization/</guid><description>&lt;p>If your organization has multiple repositories, it may be useful to view all open PRs across all of them, even if you have not been requested to review them. This is as simple as going to:&lt;/p>
&lt;pre tabindex="0">&lt;code>https://github.com/pulls?q=is%3Apr+is%3Aopen+user%3A{YOUR_ORGANIZATION_NAME}
&lt;/code>&lt;/pre>&lt;p>Example: &lt;a href="https://github.com/pulls?q=is%3Apr+is%3Aopen+user%3Apython">https://github.com/pulls?q=is%3Apr+is%3Aopen+user%3Apython&lt;/a>&lt;/p></description></item><item><title>Write a file to S3 in Node.js</title><link>https://howto.pandey.me/posts/write-a-file-to-s3-in-node.js/</link><pubDate>Fri, 07 Jan 2022 16:10:32 -0800</pubDate><guid>https://howto.pandey.me/posts/write-a-file-to-s3-in-node.js/</guid><description>&lt;p>Once I had figured out how to &lt;a href="../read-a-file-line-by-line-from-s3-in-node.js/">read a file from S3&lt;/a>, I then had to write one. Given that the text I had to write wasn&amp;rsquo;t large, this turned out to be very straightforward. Tested with &lt;a href="https://aws.amazon.com/sdk-for-javascript/">AWS SDK&lt;/a> v3.45.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">AWS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;@aws-sdk/client-s3&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">writeFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">bucket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">text&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">AWS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S3&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">s3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">putObject&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Bucket&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">bucket&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Body&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Buffer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>see also: &lt;a href="../read-a-file-line-by-line-from-s3-in-node.js/">Read a file line by line from S3 in Node.js&lt;/a>&lt;/p></description></item><item><title>Read a file line by line from S3 in Node.js</title><link>https://howto.pandey.me/posts/read-a-file-line-by-line-from-s3-in-node.js/</link><pubDate>Fri, 07 Jan 2022 15:41:11 -0800</pubDate><guid>https://howto.pandey.me/posts/read-a-file-line-by-line-from-s3-in-node.js/</guid><description>&lt;p>I had to do this recently, and it&amp;rsquo;s actually quite straightforward&amp;hellip; once you know what to do.&lt;/p>
&lt;p>One problem I faced was that all the blogs and &lt;a href="https://stackoverflow.com/">Stack Overflow&lt;/a> answers I found were about the &lt;a href="https://aws.amazon.com/sdk-for-javascript/">AWS SDK&lt;/a> v2 and they don&amp;rsquo;t work with v3. The following code has been tested with AWS SDK v3.45.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">AWS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;@aws-sdk/client-s3&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">readline&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;readline&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">readFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">bucket&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">s3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">AWS&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">S3&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">s3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getObject&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Bucket&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">bucket&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Key&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">filename&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">reader&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">readline&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createInterface&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">input&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">file&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Body&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">line&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">reader&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// process each line
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>see also: &lt;a href="../write-a-file-to-s3-in-node.js/">Write a file to S3 in Node.js&lt;/a>&lt;/p></description></item><item><title>Rebase the First Commit in a Git Repository</title><link>https://howto.pandey.me/posts/rebase-the-first-commit-in-a-git-repository/</link><pubDate>Mon, 03 Jan 2022 12:40:43 -0800</pubDate><guid>https://howto.pandey.me/posts/rebase-the-first-commit-in-a-git-repository/</guid><description>&lt;p>The &lt;code>--root&lt;/code> option of &lt;code>git rebase&lt;/code> allows you to rebase the first commit in a repository. This is useful sometimes when setting up a new repository, which is not very often, but still&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git rebase -i --root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/a/23000315/4170899">source&lt;/a>&lt;/p></description></item><item><title>Range function in JavaScript</title><link>https://howto.pandey.me/posts/range-function-in-javascript/</link><pubDate>Fri, 31 Dec 2021 13:38:42 -0800</pubDate><guid>https://howto.pandey.me/posts/range-function-in-javascript/</guid><description>&lt;p>JavaScript doesn&amp;rsquo;t have a built-in equivalent of Python&amp;rsquo;s &lt;a href="https://docs.python.org/3/library/functions.html#func-range">range&lt;/a> function. Although a &lt;em>for&lt;/em> loop isn&amp;rsquo;t difficult to write, I occasionally miss the convenience of &lt;em>range&lt;/em>.&lt;/p>
&lt;p>The popular &lt;a href="https://lodash.com/">lodash&lt;/a> library includes a &lt;a href="https://lodash.com/docs/#range">range&lt;/a> function, but it&amp;rsquo;s also easy enough to implement yourself without any additional libraries.&lt;/p>
&lt;p>The most compact way to generate the range [0..n) is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[...&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">()]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="p">[...&lt;/span>&lt;span class="nb">Array&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">()])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This can also be written using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from">Array.from()&lt;/a>, which can be useful sometimes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">Output:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A more elaborate implementation may look like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">range&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">stop&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">step&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">start&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="s1">&amp;#39;range requires at least 1 parameter&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">stop&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">stop&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">start&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">floor&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">stop&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="nx">step&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">Array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">from&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">length&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">size&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">start&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">step&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Output: [ 0, 1, 2, 3, 4, 5 ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Output: [ 4, 5, 6, 7, 8, 9 ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">28&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Output: [ 17, 19, 21, 23, 25 ]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp">source&lt;/a>&lt;/p></description></item><item><title>Run psql in a Docker Container</title><link>https://howto.pandey.me/posts/run-psql-in-a-docker-container/</link><pubDate>Mon, 14 Jun 2021 10:38:42 -0700</pubDate><guid>https://howto.pandey.me/posts/run-psql-in-a-docker-container/</guid><description>&lt;p>This is convenient if I already have Docker installed on the machine, but not Postgres, and I need to connect to a remote Postgres server.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --rm postgres psql &lt;span class="s2">&amp;#34;postgresql://username:password@host/database&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://hub.docker.com/_/postgres">source&lt;/a>&lt;/p></description></item></channel></rss>